services:
  oidc:
    container_name: oidc
    build:
      context: ./oidc
      dockerfile: Dockerfile
    image: mock-oidc-user-server
    environment:
      - PORT=9090
      - HOST=oidc
      - CLIENT_ID=XC56EL11xx
      - CLIENT_SECRET=wHPVQaYXmdDHg
      - CLIENT_REDIRECT_URI=http://localhost:8080/elixir/login
      - AUTH_ROUTE=/auth
      - INTROSPECTION_ROUTE=/token/introspection
      - JWKS_ROUTE=/jwks
      - REVOCATION_ROUTE=/token/revocation
      - TOKEN_ROUTE=/token
      - USERINFO_ROUTE=/userinfo
    ports:
      - 9090:9090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/.well-known/openid-configuration"]
      interval: 5s
      timeout: 10s
      retries: 4
  cega:
    container_name: cega
    image: egarchive/lega-base:release.v0.2.0
    volumes:
      - ./cega-users:/cega
    command:
      [
        "python",
        "/cega/cega-mock.py",
        "0.0.0.0",
        "8443",
        "/cega/users.json"
      ]
    environment:
      - LEGA_INSTANCES=dummy
      - CEGA_USERS_PASSWORD=dummy
      - CEGA_USERS_USER=dummy
    ports:
      - 8443:8443
  keygen:
    image: golang:alpine3.16
    container_name: keygen
    command:
      - "/bin/sh"
      - "-c"
      - if [ ! -f "/out/c4gh_key.sec.pem" ]; then git --help >/dev/null 2>&1; [[ "$$?" != "0" ]] && apk add git;
        [ ! -d "crypt4gh" ] && git clone https://github.com/neicnordic/crypt4gh.git;
        cd crypt4gh;
        [ ! -f "crypt4gh" ] && go build .;
        ./crypt4gh generate -n c4gh_key -p privatekeypass && mv *.pem /out/; fi
    volumes:
      - ../keys:/out
  auth:
    container_name: auth
    build:
      context: ../
      args:
        GOLANG_VERSION: ${GOLANG_VERSION-1.20}
      dockerfile: Dockerfile
    depends_on:
      oidc:
        condition: service_healthy
      cega:
        condition: service_started
      keygen:
        condition: service_completed_successfully
    environment:
      - ELIXIR_ID=XC56EL11xx
      - ELIXIR_PROVIDER=http://oidc:9090
      - ELIXIR_SECRET=wHPVQaYXmdDHg
      - ELIXIR_JWKPATH=/jwks
      - CEGA_AUTHURL=http://cega:8443/username/
      - CEGA_ID=dummy
      - CEGA_SECRET=dummy
      - CORS_ORIGINS=http://localhost:8080
      - CORS_METHODS=GET,POST, OPTIONS
      - CORS_CREDENTIALS=TRUE
      - LOG_LEVEL=info
      - S3INBOX=s3.example.com
      - JWTISSUER=http://auth:8080
      - JWTPRIVATEKEY=keys/sign-jwt.key
      - JWTSIGNATUREALG=ES256
      - C4GHPUBKEY=keys/c4gh_key.pub.pem
    volumes:
      - ../keys:/keys
      - ../:/sda-auth
    image: sda-auth
    ports:
      - 8080:8080
  remote:
    container_name: remote
    image: nginx:1.21
    volumes:
      - ./remote:/usr/share/nginx/html
    ports:
      - 8000:80
